diff --git a/node_modules/jest-jasmine2/build/index.d.ts.map b/node_modules/jest-jasmine2/build/index.d.ts.map
index 110e983..87f6e18 100644
--- a/node_modules/jest-jasmine2/build/index.d.ts.map
+++ b/node_modules/jest-jasmine2/build/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAGH,OAAO,EAAC,MAAM,EAAS,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAkB,UAAU,EAAC,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAC,eAAe,EAAC,MAAM,mBAAmB,CAAC;AAElD,OAAO,OAAO,GAAG,QAAQ,cAAc,CAAC,CAAC;AAQzC,OAAO,EAAC,OAAO,IAAI,WAAW,EAAC,MAAM,SAAS,CAAC;AAI/C,iBAAe,QAAQ,CACrB,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,aAAa,EAC5B,WAAW,EAAE,eAAe,EAC5B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,MAAM,GACf,OAAO,CAAC,UAAU,CAAC,CA+IrB;AAmCD,kBAAU,QAAQ,CAAC;IACjB,KAAY,OAAO,GAAG,WAAW,CAAC;CACnC;AAED,SAAS,QAAQ,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAGH,OAAO,EAAC,MAAM,EAAS,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAkB,UAAU,EAAC,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAC,eAAe,EAAC,MAAM,mBAAmB,CAAC;AAElD,OAAO,OAAO,GAAG,QAAQ,cAAc,CAAC,CAAC;AAQzC,OAAO,EAAC,OAAO,IAAI,WAAW,EAAC,MAAM,SAAS,CAAC;AAI/C,iBAAe,QAAQ,CACrB,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,aAAa,EAC5B,WAAW,EAAE,eAAe,EAC5B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,MAAM,GACf,OAAO,CAAC,UAAU,CAAC,CAmJrB;AAmCD,kBAAU,QAAQ,CAAC;IACjB,KAAY,OAAO,GAAG,WAAW,CAAC;CACnC;AAED,SAAS,QAAQ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/index.js b/node_modules/jest-jasmine2/build/index.js
index 7d47879..45f76e0 100644
--- a/node_modules/jest-jasmine2/build/index.js
+++ b/node_modules/jest-jasmine2/build/index.js
@@ -192,7 +192,7 @@ async function jasmine2(globalConfig, config, environment, runtime, testPath) {
       const suiteMap =
         globalConfig.enabledTestsMap &&
         globalConfig.enabledTestsMap[spec.result.testPath];
-      return suiteMap && suiteMap[spec.result.fullName];
+      return (suiteMap && suiteMap[spec.result.fullName]) || false;
     };
   } else if (globalConfig.testNamePattern) {
     const testNameRegex = new RegExp(globalConfig.testNamePattern, 'i');
diff --git a/node_modules/jest-jasmine2/build/isError.d.ts.map b/node_modules/jest-jasmine2/build/isError.d.ts.map
index 529101f..12d3bab 100644
--- a/node_modules/jest-jasmine2/build/isError.d.ts.map
+++ b/node_modules/jest-jasmine2/build/isError.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"isError.d.ts","sourceRoot":"","sources":["../src/isError.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAIH,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,cAAc,EAAE,GAAG;;;EAalD"}
\ No newline at end of file
+{"version":3,"file":"isError.d.ts","sourceRoot":"","sources":["../src/isError.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAKH,MAAM,CAAC,OAAO,UAAU,OAAO,CAC7B,cAAc,EAAE,GAAG,GAClB;IAAC,OAAO,EAAE,OAAO,CAAC;IAAC,OAAO,EAAE,MAAM,GAAG,IAAI,CAAA;CAAC,CAa5C"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/isError.js b/node_modules/jest-jasmine2/build/isError.js
index d5bec40..7e79a29 100644
--- a/node_modules/jest-jasmine2/build/isError.js
+++ b/node_modules/jest-jasmine2/build/isError.js
@@ -17,6 +17,7 @@ function _interopRequireDefault(obj) {
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
+// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
 function isError(potentialError) {
   // duck-type Error, see #2549
   const isError =
diff --git a/node_modules/jest-jasmine2/build/jasmine/Env.d.ts b/node_modules/jest-jasmine2/build/jasmine/Env.d.ts
index 51f8a82..9db16b5 100644
--- a/node_modules/jest-jasmine2/build/jasmine/Env.d.ts
+++ b/node_modules/jest-jasmine2/build/jasmine/Env.d.ts
@@ -18,21 +18,21 @@ export default function (j$: Jasmine): {
         fail: (error: Error | AssertionErrorWithStack) => void;
         pending: (message: string) => void;
         afterAll: (afterAllFunction: (done: (error?: any) => void) => void, timeout?: number | undefined) => void;
-        fit: (description: string, fn: (done: (error?: any) => void) => void, timeout?: number | undefined) => void;
+        fit: (description: string, fn: (done: (error?: any) => void) => void, timeout?: number | undefined) => Spec;
         throwingExpectationFailures: () => boolean;
         randomizeTests: (value: unknown) => void;
         randomTests: () => boolean;
         seed: (value: unknown) => unknown;
-        execute: (runnablesToRun: string[], suiteTree?: Suite | undefined) => Promise<void>;
+        execute: (runnablesToRun?: string[] | undefined, suiteTree?: Suite | undefined) => Promise<void>;
         fdescribe: (description: string, specDefinitions: Function) => Suite;
-        spyOn: (obj: Record<string, any>, methodName: string, accessType?: "get" | "set" | "writable" | "configurable" | "enumerable" | "value" | undefined) => Spy;
+        spyOn: (obj: Record<string, any>, methodName: string, accessType?: "configurable" | "enumerable" | "value" | "writable" | "get" | "set" | undefined) => Spy;
         beforeEach: (beforeEachFunction: (done: (error?: any) => void) => void, timeout?: number | undefined) => void;
         afterEach: (afterEachFunction: (done: (error?: any) => void) => void, timeout?: number | undefined) => void;
         clearReporters: () => void;
         addReporter: (reporterToAdd: Reporter) => void;
         it: (description: string, fn: (done: (error?: any) => void) => void, timeout?: number | undefined) => Spec;
         xdescribe: (description: string, specDefinitions: Function) => Suite;
-        xit: (description: string, fn: (done: (error?: any) => void) => void, timeout?: number | undefined) => any;
+        xit: (description: string, fn: (done: (error?: any) => void) => void, timeout?: number | undefined) => Spec;
         beforeAll: (beforeAllFunction: (done: (error?: any) => void) => void, timeout?: number | undefined) => void;
         todo: () => Spec;
         provideFallbackReporter: (reporterToAdd: Reporter) => void;
diff --git a/node_modules/jest-jasmine2/build/jasmine/Env.js b/node_modules/jest-jasmine2/build/jasmine/Env.js
index 5098fe9..ca6c5fb 100644
--- a/node_modules/jest-jasmine2/build/jasmine/Env.js
+++ b/node_modules/jest-jasmine2/build/jasmine/Env.js
@@ -627,7 +627,7 @@ function _default(j$) {
           if (arguments.length !== 1 || typeof description !== 'string') {
             throw new _jestUtil.ErrorWithStack(
               'Todo must be called with only a description.',
-              test.todo
+              this.todo
             );
           }
 
diff --git a/node_modules/jest-jasmine2/build/jasmine/Spec.d.ts b/node_modules/jest-jasmine2/build/jasmine/Spec.d.ts
index d9b95b4..f49a278 100644
--- a/node_modules/jest-jasmine2/build/jasmine/Spec.d.ts
+++ b/node_modules/jest-jasmine2/build/jasmine/Spec.d.ts
@@ -74,7 +74,7 @@ export default class Spec {
     pend(message?: string): void;
     todo(): void;
     getResult(): SpecResult;
-    status(enabled?: boolean): "todo" | "passed" | "failed" | "pending" | "disabled";
+    status(enabled?: boolean): "passed" | "failed" | "pending" | "todo" | "disabled";
     isExecutable(): boolean;
     getFullName(): string;
     isAssertionError(error: Error): boolean;
diff --git a/node_modules/jest-jasmine2/build/jasmineAsyncInstall.d.ts.map b/node_modules/jest-jasmine2/build/jasmineAsyncInstall.d.ts.map
index 8af3b70..362e81d 100644
--- a/node_modules/jest-jasmine2/build/jasmineAsyncInstall.d.ts.map
+++ b/node_modules/jest-jasmine2/build/jasmineAsyncInstall.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"jasmineAsyncInstall.d.ts","sourceRoot":"","sources":["../src/jasmineAsyncInstall.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH;;;GAGG;AAEH,OAAO,EAAC,MAAM,EAAE,MAAM,EAAC,MAAM,aAAa,CAAC;AAkK3C,MAAM,CAAC,OAAO,UAAU,mBAAmB,CACzC,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,MAAM,QAuBtB"}
\ No newline at end of file
+{"version":3,"file":"jasmineAsyncInstall.d.ts","sourceRoot":"","sources":["../src/jasmineAsyncInstall.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH;;;GAGG;AAEH,OAAO,EAAC,MAAM,EAAE,MAAM,EAAC,MAAM,aAAa,CAAC;AAsK3C,MAAM,CAAC,OAAO,UAAU,mBAAmB,CACzC,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,MAAM,GACpB,IAAI,CAsBN"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js b/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js
index 6065d8c..b899ba7 100644
--- a/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js
+++ b/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js
@@ -131,16 +131,12 @@ function promisifyIt(originalFn, env, jasmine) {
 
 function makeConcurrent(originalFn, env, mutex) {
   return function(specName, fn, timeout) {
-    if (
-      env != null &&
-      !env.specFilter({
-        getFullName: () => specName || ''
-      })
-    ) {
-      return originalFn.call(env, specName, () => Promise.resolve(), timeout);
-    }
+    let promise = Promise.resolve();
+    const spec = originalFn.call(env, specName, () => promise, timeout);
 
-    let promise;
+    if (env != null && !env.specFilter(spec)) {
+      return spec;
+    }
 
     try {
       promise = mutex(() => {
@@ -151,14 +147,14 @@ function makeConcurrent(originalFn, env, mutex) {
         }
 
         throw new Error(
-          `Jest: concurrent test "${specName}" must return a Promise.`
+          `Jest: concurrent test "${spec.getFullName()}" must return a Promise.`
         );
       });
     } catch (error) {
-      return originalFn.call(env, specName, () => Promise.reject(error));
+      promise = Promise.reject(error);
     }
 
-    return originalFn.call(env, specName, () => promise, timeout);
+    return spec;
   };
 }
 
diff --git a/node_modules/jest-jasmine2/build/queueRunner.d.ts.map b/node_modules/jest-jasmine2/build/queueRunner.d.ts.map
index 8d6aa25..6c86d4b 100644
--- a/node_modules/jest-jasmine2/build/queueRunner.d.ts.map
+++ b/node_modules/jest-jasmine2/build/queueRunner.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"queueRunner.d.ts","sourceRoot":"","sources":["../src/queueRunner.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAMH,aAAK,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAE5B,oBAAY,OAAO,GAAG;IACpB,YAAY,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;IACrC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IAC7B,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACpC,YAAY,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IACjC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,WAAW,EAAE,GAAG,CAAC;CAClB,CAAC;AAEF,oBAAY,WAAW,GAAG;IACxB,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,KAAK,IAAI,CAAC;IAC1C,OAAO,CAAC,EAAE,MAAM,MAAM,CAAC;IACvB,SAAS,CAAC,EAAE,KAAK,CAAC;CACnB,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,OAAO,EAAE,OAAO;;;;EA6DnD"}
\ No newline at end of file
+{"version":3,"file":"queueRunner.d.ts","sourceRoot":"","sources":["../src/queueRunner.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAMH,aAAK,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAE5B,oBAAY,OAAO,GAAG;IACpB,YAAY,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;IACrC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IAC7B,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACpC,YAAY,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IACjC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IACjC,WAAW,EAAE,GAAG,CAAC;CAClB,CAAC;AAEF,oBAAY,WAAW,GAAG;IACxB,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,KAAK,IAAI,CAAC;IAC1C,OAAO,CAAC,EAAE,MAAM,MAAM,CAAC;IACvB,SAAS,CAAC,EAAE,KAAK,CAAC;CACnB,CAAC;AAIF,MAAM,CAAC,OAAO,UAAU,WAAW,CAAC,OAAO,EAAE,OAAO;;;;EA6DnD"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/queueRunner.js b/node_modules/jest-jasmine2/build/queueRunner.js
index c5eae84..d44fdd8 100644
--- a/node_modules/jest-jasmine2/build/queueRunner.js
+++ b/node_modules/jest-jasmine2/build/queueRunner.js
@@ -17,6 +17,8 @@ var Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;
 var Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;
 var Promise = global[Symbol.for('jest-native-promise')] || global.Promise;
 
+// har to type :(
+// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
 function queueRunner(options) {
   const token = new _PCancelable.default((onCancel, resolve) => {
     onCancel(resolve);
diff --git a/node_modules/jest-jasmine2/build/reporter.d.ts.map b/node_modules/jest-jasmine2/build/reporter.d.ts.map
index d215c49..907b5c9 100644
--- a/node_modules/jest-jasmine2/build/reporter.d.ts.map
+++ b/node_modules/jest-jasmine2/build/reporter.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"reporter.d.ts","sourceRoot":"","sources":["../src/reporter.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AACnC,OAAO,EAEL,UAAU,EAEX,MAAM,mBAAmB,CAAC;AAE3B,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAC,QAAQ,EAAE,UAAU,EAAC,MAAM,SAAS,CAAC;AAI7C,MAAM,CAAC,OAAO,OAAO,gBAAiB,YAAW,QAAQ;IACvD,OAAO,CAAC,YAAY,CAAyB;IAC7C,OAAO,CAAC,aAAa,CAAsB;IAC3C,OAAO,CAAC,OAAO,CAAuB;IACtC,OAAO,CAAC,cAAc,CAAgB;IACtC,OAAO,CAAC,QAAQ,CAAM;IACtB,OAAO,CAAC,eAAe,CAAsB;IAC7C,OAAO,CAAC,WAAW,CAA4B;IAC/C,OAAO,CAAC,SAAS,CAAc;gBAG7B,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,aAAa,EAC5B,QAAQ,EAAE,MAAM,CAAC,IAAI;IAYvB,cAAc,CAAC,WAAW,EAAE,UAAU;IAEtC,WAAW,CAAC,IAAI,EAAE,UAAU;IAI5B,QAAQ,CAAC,MAAM,EAAE,UAAU,GAAG,IAAI;IAMlC,YAAY,CAAC,KAAK,EAAE,WAAW,GAAG,IAAI;IAItC,SAAS,CAAC,OAAO,EAAE,WAAW,GAAG,IAAI;IAIrC,WAAW,CAAC,WAAW,EAAE,UAAU,GAAG,IAAI;IA8C1C,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC;IAIjC,OAAO,CAAC,yBAAyB;IAWjC,OAAO,CAAC,mBAAmB;CAmC5B"}
\ No newline at end of file
+{"version":3,"file":"reporter.d.ts","sourceRoot":"","sources":["../src/reporter.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AACnC,OAAO,EAEL,UAAU,EAEX,MAAM,mBAAmB,CAAC;AAE3B,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAC,QAAQ,EAAE,UAAU,EAAC,MAAM,SAAS,CAAC;AAI7C,MAAM,CAAC,OAAO,OAAO,gBAAiB,YAAW,QAAQ;IACvD,OAAO,CAAC,YAAY,CAAyB;IAC7C,OAAO,CAAC,aAAa,CAAsB;IAC3C,OAAO,CAAC,OAAO,CAAuB;IACtC,OAAO,CAAC,cAAc,CAAgB;IACtC,OAAO,CAAC,QAAQ,CAAM;IACtB,OAAO,CAAC,eAAe,CAAsB;IAC7C,OAAO,CAAC,WAAW,CAA4B;IAC/C,OAAO,CAAC,SAAS,CAAc;gBAG7B,YAAY,EAAE,MAAM,CAAC,YAAY,EACjC,MAAM,EAAE,MAAM,CAAC,aAAa,EAC5B,QAAQ,EAAE,MAAM,CAAC,IAAI;IAYvB,cAAc,CAAC,WAAW,EAAE,UAAU,GAAG,IAAI;IAE7C,WAAW,CAAC,IAAI,EAAE,UAAU,GAAG,IAAI;IAInC,QAAQ,CAAC,MAAM,EAAE,UAAU,GAAG,IAAI;IAMlC,YAAY,CAAC,KAAK,EAAE,WAAW,GAAG,IAAI;IAItC,SAAS,CAAC,OAAO,EAAE,WAAW,GAAG,IAAI;IAIrC,WAAW,CAAC,WAAW,EAAE,UAAU,GAAG,IAAI;IA8C1C,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC;IAIjC,OAAO,CAAC,yBAAyB;IAWjC,OAAO,CAAC,mBAAmB;CAqC5B"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/reporter.js b/node_modules/jest-jasmine2/build/reporter.js
index fc30ed5..b58de6c 100644
--- a/node_modules/jest-jasmine2/build/reporter.js
+++ b/node_modules/jest-jasmine2/build/reporter.js
@@ -193,6 +193,7 @@ class Jasmine2Reporter {
     const results = {
       ancestorTitles,
       duration,
+      failureDetails: [],
       failureMessages: [],
       fullName: specResult.fullName,
       location,
@@ -207,6 +208,7 @@ class Jasmine2Reporter {
           ? this._addMissingMessageToStack(failed.stack, failed.message)
           : failed.message || '';
       results.failureMessages.push(message);
+      results.failureDetails.push(failed);
     });
     return results;
   }
diff --git a/node_modules/jest-jasmine2/build/setup_jest_globals.d.ts.map b/node_modules/jest-jasmine2/build/setup_jest_globals.d.ts.map
index 3fba2da..56d4623 100644
--- a/node_modules/jest-jasmine2/build/setup_jest_globals.d.ts.map
+++ b/node_modules/jest-jasmine2/build/setup_jest_globals.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"setup_jest_globals.d.ts","sourceRoot":"","sources":["../src/setup_jest_globals.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAC,MAAM,EAAS,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAC,MAAM,EAAC,MAAM,eAAe,CAAC;AAYrC,oBAAY,YAAY,GAAG;IACzB,MAAM,EAAE,MAAM,CAAC,aAAa,CAAC;IAC7B,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC;IAClC,YAAY,EAAE,CAAC,UAAU,EAAE,MAAM,KAAK,MAAM,CAAC;IAC7C,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC;CACvB,CAAC;;AA6DF,wBA6BE"}
\ No newline at end of file
+{"version":3,"file":"setup_jest_globals.d.ts","sourceRoot":"","sources":["../src/setup_jest_globals.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAC,MAAM,EAAS,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAC,MAAM,EAAC,MAAM,eAAe,CAAC;AAarC,oBAAY,YAAY,GAAG;IACzB,MAAM,EAAE,MAAM,CAAC,aAAa,CAAC;IAC7B,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC;IAClC,YAAY,EAAE,CAAC,UAAU,EAAE,MAAM,KAAK,MAAM,CAAC;IAC7C,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC;CACvB,CAAC;;AA6DF,wBA6BE"}
\ No newline at end of file
diff --git a/node_modules/jest-jasmine2/build/treeProcessor.d.ts.map b/node_modules/jest-jasmine2/build/treeProcessor.d.ts.map
index 7bead82..c88cb88 100644
--- a/node_modules/jest-jasmine2/build/treeProcessor.d.ts.map
+++ b/node_modules/jest-jasmine2/build/treeProcessor.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"treeProcessor.d.ts","sourceRoot":"","sources":["../src/treeProcessor.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,OAAO,KAAK,MAAM,iBAAiB,CAAC;AAEpC,aAAK,OAAO,GAAG;IACb,YAAY,EAAE,CAAC,KAAK,EAAE,QAAQ,KAAK,IAAI,CAAC;IACxC,SAAS,EAAE,CAAC,KAAK,EAAE,QAAQ,KAAK,IAAI,CAAC;IACrC,kBAAkB,EAAE,GAAG,CAAC;IACxB,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B,IAAI,EAAE,QAAQ,CAAC;CAChB,CAAC;AAEF,oBAAY,QAAQ,GAAG;IACrB,WAAW,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,IAAI,EAAE,OAAO,EAAE,OAAO,KAAK,IAAI,CAAC;IAC5D,EAAE,EAAE,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACpC,iBAAiB,EAAE,MAAM,GAAG,CAAC;IAC7B,QAAQ,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;CAC5B,GAAG,IAAI,CAAC,KAAK,EAAE,WAAW,GAAG,aAAa,GAAG,QAAQ,CAAC,CAAC;AAExD,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,OAAO,EAAE,OAAO,QA6DrD"}
\ No newline at end of file
+{"version":3,"file":"treeProcessor.d.ts","sourceRoot":"","sources":["../src/treeProcessor.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,OAAO,KAAK,MAAM,iBAAiB,CAAC;AAEpC,aAAK,OAAO,GAAG;IACb,YAAY,EAAE,CAAC,KAAK,EAAE,QAAQ,KAAK,IAAI,CAAC;IACxC,SAAS,EAAE,CAAC,KAAK,EAAE,QAAQ,KAAK,IAAI,CAAC;IACrC,kBAAkB,EAAE,GAAG,CAAC;IACxB,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B,IAAI,EAAE,QAAQ,CAAC;CAChB,CAAC;AAEF,oBAAY,QAAQ,GAAG;IACrB,WAAW,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACzB,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,IAAI,EAAE,OAAO,EAAE,OAAO,KAAK,IAAI,CAAC;IAC5D,EAAE,EAAE,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACpC,iBAAiB,EAAE,MAAM,GAAG,CAAC;IAC7B,QAAQ,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;CAC5B,GAAG,IAAI,CAAC,KAAK,EAAE,WAAW,GAAG,aAAa,GAAG,QAAQ,CAAC,CAAC;AAExD,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CA6D5D"}
\ No newline at end of file
